[pytest]
# pytest configuration for OpenFootManager

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = ofm/tests

# Minimum Python version
minversion = 3.10

# Add current directory to Python path
pythonpath = .

# Markers for test categorization
markers =
    fast: Fast tests that should complete in under 1 second (for pre-commit)
    slow: Slow tests that take more than 1 second
    unit: Unit tests for individual components
    integration: Integration tests that test multiple components
    critical: Critical functionality that must always pass
    db: Database-related tests
    ui: UI/GUI tests
    simulation: Game simulation tests
    save: Save/load functionality tests
    performance: Performance benchmark tests
    
# Coverage settings
addopts = 
    --strict-markers
    --tb=short
    --cov=ofm
    --cov-branch
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=70
    -p no:warnings
    
# Coverage exclusions
[coverage:run]
source = ofm
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */docs/*
    */ui/pages/*
    */ui/controllers/*
    
[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    
# Test output formatting
console_output_style = progress

# Timeout for tests (in seconds)
timeout = 300

# Parallel execution settings (for CI/CD)
# Use -n auto to run tests in parallel
# Requires pytest-xdist

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Capture settings
capture = no

# Assertion details
assertmode = rewrite